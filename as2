1) Write a script to back up the directory /home/user/data into a folder named /backup 
with a timestamped subdirectory. Ensure your script displays a message upon 
successful completion of the backup. 

Step 1 
sudo mkdir -p /home/user/data 
sudo mkdir -p /backup 
sudo chown ec2-user:ec2-user /home/user/data /backup 

Step 2 
echo "Sample file 1" > /home/user/data/file1.txt 
echo "Sample file 2" > /home/user/data/file2.txt 

Step 3  
nano backup.sh 
#!/bin/bash 
SOURCE="/home/user/data" 
DESTINATION="/backup/backup_$timestamp" 
mkdir -p "$DESTINATION/$(date)" 
cp -r "$SOURCE" "$DESTINATION/$(date)" && echo "Backup completed on $(date)" || echo 
"Backup failed on $(date)" 

Write a script to check the status of the Jenkins.service service and start it if it is not 
running. Display appropriate messages based on the service's state. 
#!/bin/bash 
SERVICE="sysstat.service" 
if systemctl is-active --quiet "$SERVICE"; then 
echo "running" 
else 
echo "not running" 
fi 

Write a script to check the reachability of a host named google.com and log the result 
into a file named ping_results.log. 
#!/bin/bash 
HOST="fsfsdfdsfsf.com" 
OUTPUT_FILE="ping_results.log" 
if ping -c 1 "$HOST" &> /dev/null; then 
echo "$(date): $HOST is reachable" >> "$OUTPUT_FILE" 
else 
echo "$(date): $HOST is not reachable" >> "$OUTPUT_FILE" 
fi 

Write a script that stores the system uptime in a file named system_uptime.log and 
appends a timestamp to each entry. 
#!/bin/bash 
OUTPUT_FILE="system_uptime.log" 
echo "$(date): $(uptime -p)" >> "$OUTPUT_FILE" 

Write a command to display the top 10 processes consuming the most memory on a 
system. 
#!/bin/bash 
echo "$(ps aux --sort=-%mem | head -n 11)" >> "memory_usage.log" 

Write a command or script to display all TCP and UDP listening ports on a system, 
including their associated processes. 
#!/bin/bash 
netstat -tuln | grep LISTEN 
 
 
